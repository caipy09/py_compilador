Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     statement -> print_statement
Rule 4     statement -> comp_statement
Rule 5     statement -> logic_statement
Rule 6     statement -> while_statement
Rule 7     statement -> if_statement
Rule 8     statement -> expression
Rule 9     statement -> LLAVEA INT block_decl
Rule 10    block_decl -> ID LLAVEC
Rule 11    block_decl -> ID OR other_decl
Rule 12    other_decl -> block_decl
Rule 13    statement -> ID ASIG expression
Rule 14    expression -> term
Rule 15    expression -> expression SUMA term
Rule 16    expression -> expression RESTA term
Rule 17    term -> factor
Rule 18    term -> term MULT factor
Rule 19    term -> term DIV factor
Rule 20    factor -> PARA expression PARC
Rule 21    factor -> ID
Rule 22    factor -> CTE
Rule 23    print_statement -> PRINT PARA expression PARC
Rule 24    comp_statement -> expression IGUALA factor
Rule 25    comp_statement -> expression DIST factor
Rule 26    comp_statement -> expression MENOR factor
Rule 27    comp_statement -> expression MENORIGUAL factor
Rule 28    comp_statement -> expression MAYOR factor
Rule 29    comp_statement -> expression MAYORIGUAL factor
Rule 30    logic_statement -> comp_statement OR comp_expression
Rule 31    logic_statement -> comp_statement AND comp_expression
Rule 32    comp_expression -> comp_statement
Rule 33    sub_program -> program LLAVEC
Rule 34    cond_while -> comp_statement
Rule 35    cond_while -> logic_statement
Rule 36    while -> WHILE
Rule 37    while_statement -> while PARA cond_while PARC LLAVEA sub_program
Rule 38    cond_if -> comp_statement
Rule 39    cond_if -> logic_statement
Rule 40    fcpo1 -> sub_program
Rule 41    fcpo2 -> sub_program
Rule 42    if_statement -> IF PARA cond_if PARC LLAVEA fcpo1 else_statement
Rule 43    else_statement -> ELSE LLAVEA fcpo2
Rule 44    else_statement -> empty
Rule 45    empty -> <empty>

Terminals, with rules where they appear

AND                  : 31
ASIG                 : 13
CTE                  : 22
DIST                 : 25
DIV                  : 19
ELSE                 : 43
ID                   : 10 11 13 21
IF                   : 42
IGUALA               : 24
INT                  : 9
LLAVEA               : 9 37 42 43
LLAVEC               : 10 33
MAYOR                : 28
MAYORIGUAL           : 29
MENOR                : 26
MENORIGUAL           : 27
MULT                 : 18
OR                   : 11 30
PARA                 : 20 23 37 42
PARC                 : 20 23 37 42
PRINT                : 23
RESTA                : 16
SUMA                 : 15
WHILE                : 36
error                : 

Nonterminals, with rules where they appear

block_decl           : 9 12
comp_expression      : 30 31
comp_statement       : 4 30 31 32 34 38
cond_if              : 42
cond_while           : 37
else_statement       : 42
empty                : 44
expression           : 8 13 15 16 20 23 24 25 26 27 28 29
factor               : 17 18 19 24 25 26 27 28 29
fcpo1                : 42
fcpo2                : 43
if_statement         : 7
logic_statement      : 5 35 39
other_decl           : 11
print_statement      : 3
program              : 1 33 0
statement            : 1 2
sub_program          : 37 40 41
term                 : 14 15 16 18 19
while                : 37
while_statement      : 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . print_statement
    (4) statement -> . comp_statement
    (5) statement -> . logic_statement
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . expression
    (9) statement -> . LLAVEA INT block_decl
    (13) statement -> . ID ASIG expression
    (23) print_statement -> . PRINT PARA expression PARC
    (24) comp_statement -> . expression IGUALA factor
    (25) comp_statement -> . expression DIST factor
    (26) comp_statement -> . expression MENOR factor
    (27) comp_statement -> . expression MENORIGUAL factor
    (28) comp_statement -> . expression MAYOR factor
    (29) comp_statement -> . expression MAYORIGUAL factor
    (30) logic_statement -> . comp_statement OR comp_expression
    (31) logic_statement -> . comp_statement AND comp_expression
    (37) while_statement -> . while PARA cond_while PARC LLAVEA sub_program
    (42) if_statement -> . IF PARA cond_if PARC LLAVEA fcpo1 else_statement
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (36) while -> . WHILE
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    LLAVEA          shift and go to state 9
    ID              shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 15
    WHILE           shift and go to state 17
    PARA            shift and go to state 12
    CTE             shift and go to state 18

    program                        shift and go to state 1
    statement                      shift and go to state 2
    print_statement                shift and go to state 3
    comp_statement                 shift and go to state 4
    logic_statement                shift and go to state 5
    while_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    expression                     shift and go to state 8
    factor                         shift and go to state 13
    while                          shift and go to state 14
    term                           shift and go to state 16

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (3) statement -> . print_statement
    (4) statement -> . comp_statement
    (5) statement -> . logic_statement
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . expression
    (9) statement -> . LLAVEA INT block_decl
    (13) statement -> . ID ASIG expression
    (23) print_statement -> . PRINT PARA expression PARC
    (24) comp_statement -> . expression IGUALA factor
    (25) comp_statement -> . expression DIST factor
    (26) comp_statement -> . expression MENOR factor
    (27) comp_statement -> . expression MENORIGUAL factor
    (28) comp_statement -> . expression MAYOR factor
    (29) comp_statement -> . expression MAYORIGUAL factor
    (30) logic_statement -> . comp_statement OR comp_expression
    (31) logic_statement -> . comp_statement AND comp_expression
    (37) while_statement -> . while PARA cond_while PARC LLAVEA sub_program
    (42) if_statement -> . IF PARA cond_if PARC LLAVEA fcpo1 else_statement
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (36) while -> . WHILE
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    LLAVEA          shift and go to state 9
    ID              shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 15
    WHILE           shift and go to state 17
    PARA            shift and go to state 12
    CTE             shift and go to state 18

    statement                      shift and go to state 19
    print_statement                shift and go to state 3
    comp_statement                 shift and go to state 4
    logic_statement                shift and go to state 5
    while_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    expression                     shift and go to state 8
    factor                         shift and go to state 13
    while                          shift and go to state 14
    term                           shift and go to state 16

state 2

    (2) program -> statement .

    LLAVEA          reduce using rule 2 (program -> statement .)
    ID              reduce using rule 2 (program -> statement .)
    PRINT           reduce using rule 2 (program -> statement .)
    IF              reduce using rule 2 (program -> statement .)
    WHILE           reduce using rule 2 (program -> statement .)
    PARA            reduce using rule 2 (program -> statement .)
    CTE             reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)
    LLAVEC          reduce using rule 2 (program -> statement .)


state 3

    (3) statement -> print_statement .

    LLAVEA          reduce using rule 3 (statement -> print_statement .)
    ID              reduce using rule 3 (statement -> print_statement .)
    PRINT           reduce using rule 3 (statement -> print_statement .)
    IF              reduce using rule 3 (statement -> print_statement .)
    WHILE           reduce using rule 3 (statement -> print_statement .)
    PARA            reduce using rule 3 (statement -> print_statement .)
    CTE             reduce using rule 3 (statement -> print_statement .)
    $end            reduce using rule 3 (statement -> print_statement .)
    LLAVEC          reduce using rule 3 (statement -> print_statement .)


state 4

    (4) statement -> comp_statement .
    (30) logic_statement -> comp_statement . OR comp_expression
    (31) logic_statement -> comp_statement . AND comp_expression

    LLAVEA          reduce using rule 4 (statement -> comp_statement .)
    ID              reduce using rule 4 (statement -> comp_statement .)
    PRINT           reduce using rule 4 (statement -> comp_statement .)
    IF              reduce using rule 4 (statement -> comp_statement .)
    WHILE           reduce using rule 4 (statement -> comp_statement .)
    PARA            reduce using rule 4 (statement -> comp_statement .)
    CTE             reduce using rule 4 (statement -> comp_statement .)
    $end            reduce using rule 4 (statement -> comp_statement .)
    LLAVEC          reduce using rule 4 (statement -> comp_statement .)
    OR              shift and go to state 20
    AND             shift and go to state 21


state 5

    (5) statement -> logic_statement .

    LLAVEA          reduce using rule 5 (statement -> logic_statement .)
    ID              reduce using rule 5 (statement -> logic_statement .)
    PRINT           reduce using rule 5 (statement -> logic_statement .)
    IF              reduce using rule 5 (statement -> logic_statement .)
    WHILE           reduce using rule 5 (statement -> logic_statement .)
    PARA            reduce using rule 5 (statement -> logic_statement .)
    CTE             reduce using rule 5 (statement -> logic_statement .)
    $end            reduce using rule 5 (statement -> logic_statement .)
    LLAVEC          reduce using rule 5 (statement -> logic_statement .)


state 6

    (6) statement -> while_statement .

    LLAVEA          reduce using rule 6 (statement -> while_statement .)
    ID              reduce using rule 6 (statement -> while_statement .)
    PRINT           reduce using rule 6 (statement -> while_statement .)
    IF              reduce using rule 6 (statement -> while_statement .)
    WHILE           reduce using rule 6 (statement -> while_statement .)
    PARA            reduce using rule 6 (statement -> while_statement .)
    CTE             reduce using rule 6 (statement -> while_statement .)
    $end            reduce using rule 6 (statement -> while_statement .)
    LLAVEC          reduce using rule 6 (statement -> while_statement .)


state 7

    (7) statement -> if_statement .

    LLAVEA          reduce using rule 7 (statement -> if_statement .)
    ID              reduce using rule 7 (statement -> if_statement .)
    PRINT           reduce using rule 7 (statement -> if_statement .)
    IF              reduce using rule 7 (statement -> if_statement .)
    WHILE           reduce using rule 7 (statement -> if_statement .)
    PARA            reduce using rule 7 (statement -> if_statement .)
    CTE             reduce using rule 7 (statement -> if_statement .)
    $end            reduce using rule 7 (statement -> if_statement .)
    LLAVEC          reduce using rule 7 (statement -> if_statement .)


state 8

    (8) statement -> expression .
    (24) comp_statement -> expression . IGUALA factor
    (25) comp_statement -> expression . DIST factor
    (26) comp_statement -> expression . MENOR factor
    (27) comp_statement -> expression . MENORIGUAL factor
    (28) comp_statement -> expression . MAYOR factor
    (29) comp_statement -> expression . MAYORIGUAL factor
    (15) expression -> expression . SUMA term
    (16) expression -> expression . RESTA term

    LLAVEA          reduce using rule 8 (statement -> expression .)
    ID              reduce using rule 8 (statement -> expression .)
    PRINT           reduce using rule 8 (statement -> expression .)
    IF              reduce using rule 8 (statement -> expression .)
    WHILE           reduce using rule 8 (statement -> expression .)
    PARA            reduce using rule 8 (statement -> expression .)
    CTE             reduce using rule 8 (statement -> expression .)
    $end            reduce using rule 8 (statement -> expression .)
    LLAVEC          reduce using rule 8 (statement -> expression .)
    IGUALA          shift and go to state 22
    DIST            shift and go to state 23
    MENOR           shift and go to state 24
    MENORIGUAL      shift and go to state 25
    MAYOR           shift and go to state 26
    MAYORIGUAL      shift and go to state 27
    SUMA            shift and go to state 28
    RESTA           shift and go to state 29


state 9

    (9) statement -> LLAVEA . INT block_decl

    INT             shift and go to state 30


state 10

    (13) statement -> ID . ASIG expression
    (21) factor -> ID .

    ASIG            shift and go to state 31
    MULT            reduce using rule 21 (factor -> ID .)
    DIV             reduce using rule 21 (factor -> ID .)
    IGUALA          reduce using rule 21 (factor -> ID .)
    DIST            reduce using rule 21 (factor -> ID .)
    MENOR           reduce using rule 21 (factor -> ID .)
    MENORIGUAL      reduce using rule 21 (factor -> ID .)
    MAYOR           reduce using rule 21 (factor -> ID .)
    MAYORIGUAL      reduce using rule 21 (factor -> ID .)
    SUMA            reduce using rule 21 (factor -> ID .)
    RESTA           reduce using rule 21 (factor -> ID .)
    LLAVEA          reduce using rule 21 (factor -> ID .)
    ID              reduce using rule 21 (factor -> ID .)
    PRINT           reduce using rule 21 (factor -> ID .)
    IF              reduce using rule 21 (factor -> ID .)
    WHILE           reduce using rule 21 (factor -> ID .)
    PARA            reduce using rule 21 (factor -> ID .)
    CTE             reduce using rule 21 (factor -> ID .)
    $end            reduce using rule 21 (factor -> ID .)
    LLAVEC          reduce using rule 21 (factor -> ID .)


state 11

    (23) print_statement -> PRINT . PARA expression PARC

    PARA            shift and go to state 32


state 12

    (20) factor -> PARA . expression PARC
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    expression                     shift and go to state 33
    term                           shift and go to state 16
    factor                         shift and go to state 13

state 13

    (17) term -> factor .

    MULT            reduce using rule 17 (term -> factor .)
    DIV             reduce using rule 17 (term -> factor .)
    IGUALA          reduce using rule 17 (term -> factor .)
    DIST            reduce using rule 17 (term -> factor .)
    MENOR           reduce using rule 17 (term -> factor .)
    MENORIGUAL      reduce using rule 17 (term -> factor .)
    MAYOR           reduce using rule 17 (term -> factor .)
    MAYORIGUAL      reduce using rule 17 (term -> factor .)
    SUMA            reduce using rule 17 (term -> factor .)
    RESTA           reduce using rule 17 (term -> factor .)
    LLAVEA          reduce using rule 17 (term -> factor .)
    ID              reduce using rule 17 (term -> factor .)
    PRINT           reduce using rule 17 (term -> factor .)
    IF              reduce using rule 17 (term -> factor .)
    WHILE           reduce using rule 17 (term -> factor .)
    PARA            reduce using rule 17 (term -> factor .)
    CTE             reduce using rule 17 (term -> factor .)
    $end            reduce using rule 17 (term -> factor .)
    PARC            reduce using rule 17 (term -> factor .)
    LLAVEC          reduce using rule 17 (term -> factor .)


state 14

    (37) while_statement -> while . PARA cond_while PARC LLAVEA sub_program

    PARA            shift and go to state 35


state 15

    (42) if_statement -> IF . PARA cond_if PARC LLAVEA fcpo1 else_statement

    PARA            shift and go to state 36


state 16

    (14) expression -> term .
    (18) term -> term . MULT factor
    (19) term -> term . DIV factor

    IGUALA          reduce using rule 14 (expression -> term .)
    DIST            reduce using rule 14 (expression -> term .)
    MENOR           reduce using rule 14 (expression -> term .)
    MENORIGUAL      reduce using rule 14 (expression -> term .)
    MAYOR           reduce using rule 14 (expression -> term .)
    MAYORIGUAL      reduce using rule 14 (expression -> term .)
    SUMA            reduce using rule 14 (expression -> term .)
    RESTA           reduce using rule 14 (expression -> term .)
    LLAVEA          reduce using rule 14 (expression -> term .)
    ID              reduce using rule 14 (expression -> term .)
    PRINT           reduce using rule 14 (expression -> term .)
    IF              reduce using rule 14 (expression -> term .)
    WHILE           reduce using rule 14 (expression -> term .)
    PARA            reduce using rule 14 (expression -> term .)
    CTE             reduce using rule 14 (expression -> term .)
    $end            reduce using rule 14 (expression -> term .)
    PARC            reduce using rule 14 (expression -> term .)
    LLAVEC          reduce using rule 14 (expression -> term .)
    MULT            shift and go to state 37
    DIV             shift and go to state 38


state 17

    (36) while -> WHILE .

    PARA            reduce using rule 36 (while -> WHILE .)


state 18

    (22) factor -> CTE .

    MULT            reduce using rule 22 (factor -> CTE .)
    DIV             reduce using rule 22 (factor -> CTE .)
    IGUALA          reduce using rule 22 (factor -> CTE .)
    DIST            reduce using rule 22 (factor -> CTE .)
    MENOR           reduce using rule 22 (factor -> CTE .)
    MENORIGUAL      reduce using rule 22 (factor -> CTE .)
    MAYOR           reduce using rule 22 (factor -> CTE .)
    MAYORIGUAL      reduce using rule 22 (factor -> CTE .)
    SUMA            reduce using rule 22 (factor -> CTE .)
    RESTA           reduce using rule 22 (factor -> CTE .)
    LLAVEA          reduce using rule 22 (factor -> CTE .)
    ID              reduce using rule 22 (factor -> CTE .)
    PRINT           reduce using rule 22 (factor -> CTE .)
    IF              reduce using rule 22 (factor -> CTE .)
    WHILE           reduce using rule 22 (factor -> CTE .)
    PARA            reduce using rule 22 (factor -> CTE .)
    CTE             reduce using rule 22 (factor -> CTE .)
    $end            reduce using rule 22 (factor -> CTE .)
    PARC            reduce using rule 22 (factor -> CTE .)
    OR              reduce using rule 22 (factor -> CTE .)
    AND             reduce using rule 22 (factor -> CTE .)
    LLAVEC          reduce using rule 22 (factor -> CTE .)


state 19

    (1) program -> program statement .

    LLAVEA          reduce using rule 1 (program -> program statement .)
    ID              reduce using rule 1 (program -> program statement .)
    PRINT           reduce using rule 1 (program -> program statement .)
    IF              reduce using rule 1 (program -> program statement .)
    WHILE           reduce using rule 1 (program -> program statement .)
    PARA            reduce using rule 1 (program -> program statement .)
    CTE             reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)
    LLAVEC          reduce using rule 1 (program -> program statement .)


state 20

    (30) logic_statement -> comp_statement OR . comp_expression
    (32) comp_expression -> . comp_statement
    (24) comp_statement -> . expression IGUALA factor
    (25) comp_statement -> . expression DIST factor
    (26) comp_statement -> . expression MENOR factor
    (27) comp_statement -> . expression MENORIGUAL factor
    (28) comp_statement -> . expression MAYOR factor
    (29) comp_statement -> . expression MAYORIGUAL factor
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    comp_statement                 shift and go to state 39
    comp_expression                shift and go to state 40
    expression                     shift and go to state 41
    factor                         shift and go to state 13
    term                           shift and go to state 16

state 21

    (31) logic_statement -> comp_statement AND . comp_expression
    (32) comp_expression -> . comp_statement
    (24) comp_statement -> . expression IGUALA factor
    (25) comp_statement -> . expression DIST factor
    (26) comp_statement -> . expression MENOR factor
    (27) comp_statement -> . expression MENORIGUAL factor
    (28) comp_statement -> . expression MAYOR factor
    (29) comp_statement -> . expression MAYORIGUAL factor
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    comp_statement                 shift and go to state 39
    comp_expression                shift and go to state 42
    expression                     shift and go to state 41
    factor                         shift and go to state 13
    term                           shift and go to state 16

state 22

    (24) comp_statement -> expression IGUALA . factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    factor                         shift and go to state 43

state 23

    (25) comp_statement -> expression DIST . factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    factor                         shift and go to state 44

state 24

    (26) comp_statement -> expression MENOR . factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    factor                         shift and go to state 45

state 25

    (27) comp_statement -> expression MENORIGUAL . factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    factor                         shift and go to state 46

state 26

    (28) comp_statement -> expression MAYOR . factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    factor                         shift and go to state 47

state 27

    (29) comp_statement -> expression MAYORIGUAL . factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    factor                         shift and go to state 48

state 28

    (15) expression -> expression SUMA . term
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    term                           shift and go to state 49
    factor                         shift and go to state 13

state 29

    (16) expression -> expression RESTA . term
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    term                           shift and go to state 50
    factor                         shift and go to state 13

state 30

    (9) statement -> LLAVEA INT . block_decl
    (10) block_decl -> . ID LLAVEC
    (11) block_decl -> . ID OR other_decl

    ID              shift and go to state 52

    block_decl                     shift and go to state 51

state 31

    (13) statement -> ID ASIG . expression
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    expression                     shift and go to state 53
    term                           shift and go to state 16
    factor                         shift and go to state 13

state 32

    (23) print_statement -> PRINT PARA . expression PARC
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    expression                     shift and go to state 54
    term                           shift and go to state 16
    factor                         shift and go to state 13

state 33

    (20) factor -> PARA expression . PARC
    (15) expression -> expression . SUMA term
    (16) expression -> expression . RESTA term

    PARC            shift and go to state 55
    SUMA            shift and go to state 28
    RESTA           shift and go to state 29


state 34

    (21) factor -> ID .

    MULT            reduce using rule 21 (factor -> ID .)
    DIV             reduce using rule 21 (factor -> ID .)
    PARC            reduce using rule 21 (factor -> ID .)
    SUMA            reduce using rule 21 (factor -> ID .)
    RESTA           reduce using rule 21 (factor -> ID .)
    IGUALA          reduce using rule 21 (factor -> ID .)
    DIST            reduce using rule 21 (factor -> ID .)
    MENOR           reduce using rule 21 (factor -> ID .)
    MENORIGUAL      reduce using rule 21 (factor -> ID .)
    MAYOR           reduce using rule 21 (factor -> ID .)
    MAYORIGUAL      reduce using rule 21 (factor -> ID .)
    OR              reduce using rule 21 (factor -> ID .)
    AND             reduce using rule 21 (factor -> ID .)
    LLAVEA          reduce using rule 21 (factor -> ID .)
    ID              reduce using rule 21 (factor -> ID .)
    PRINT           reduce using rule 21 (factor -> ID .)
    IF              reduce using rule 21 (factor -> ID .)
    WHILE           reduce using rule 21 (factor -> ID .)
    PARA            reduce using rule 21 (factor -> ID .)
    CTE             reduce using rule 21 (factor -> ID .)
    $end            reduce using rule 21 (factor -> ID .)
    LLAVEC          reduce using rule 21 (factor -> ID .)


state 35

    (37) while_statement -> while PARA . cond_while PARC LLAVEA sub_program
    (34) cond_while -> . comp_statement
    (35) cond_while -> . logic_statement
    (24) comp_statement -> . expression IGUALA factor
    (25) comp_statement -> . expression DIST factor
    (26) comp_statement -> . expression MENOR factor
    (27) comp_statement -> . expression MENORIGUAL factor
    (28) comp_statement -> . expression MAYOR factor
    (29) comp_statement -> . expression MAYORIGUAL factor
    (30) logic_statement -> . comp_statement OR comp_expression
    (31) logic_statement -> . comp_statement AND comp_expression
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    cond_while                     shift and go to state 56
    comp_statement                 shift and go to state 57
    logic_statement                shift and go to state 58
    expression                     shift and go to state 41
    factor                         shift and go to state 13
    term                           shift and go to state 16

state 36

    (42) if_statement -> IF PARA . cond_if PARC LLAVEA fcpo1 else_statement
    (38) cond_if -> . comp_statement
    (39) cond_if -> . logic_statement
    (24) comp_statement -> . expression IGUALA factor
    (25) comp_statement -> . expression DIST factor
    (26) comp_statement -> . expression MENOR factor
    (27) comp_statement -> . expression MENORIGUAL factor
    (28) comp_statement -> . expression MAYOR factor
    (29) comp_statement -> . expression MAYORIGUAL factor
    (30) logic_statement -> . comp_statement OR comp_expression
    (31) logic_statement -> . comp_statement AND comp_expression
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    cond_if                        shift and go to state 59
    comp_statement                 shift and go to state 60
    logic_statement                shift and go to state 61
    expression                     shift and go to state 41
    factor                         shift and go to state 13
    term                           shift and go to state 16

state 37

    (18) term -> term MULT . factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    factor                         shift and go to state 62

state 38

    (19) term -> term DIV . factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    PARA            shift and go to state 12
    ID              shift and go to state 34
    CTE             shift and go to state 18

    factor                         shift and go to state 63

state 39

    (32) comp_expression -> comp_statement .

    LLAVEA          reduce using rule 32 (comp_expression -> comp_statement .)
    ID              reduce using rule 32 (comp_expression -> comp_statement .)
    PRINT           reduce using rule 32 (comp_expression -> comp_statement .)
    IF              reduce using rule 32 (comp_expression -> comp_statement .)
    WHILE           reduce using rule 32 (comp_expression -> comp_statement .)
    PARA            reduce using rule 32 (comp_expression -> comp_statement .)
    CTE             reduce using rule 32 (comp_expression -> comp_statement .)
    $end            reduce using rule 32 (comp_expression -> comp_statement .)
    PARC            reduce using rule 32 (comp_expression -> comp_statement .)
    LLAVEC          reduce using rule 32 (comp_expression -> comp_statement .)


state 40

    (30) logic_statement -> comp_statement OR comp_expression .

    LLAVEA          reduce using rule 30 (logic_statement -> comp_statement OR comp_expression .)
    ID              reduce using rule 30 (logic_statement -> comp_statement OR comp_expression .)
    PRINT           reduce using rule 30 (logic_statement -> comp_statement OR comp_expression .)
    IF              reduce using rule 30 (logic_statement -> comp_statement OR comp_expression .)
    WHILE           reduce using rule 30 (logic_statement -> comp_statement OR comp_expression .)
    PARA            reduce using rule 30 (logic_statement -> comp_statement OR comp_expression .)
    CTE             reduce using rule 30 (logic_statement -> comp_statement OR comp_expression .)
    $end            reduce using rule 30 (logic_statement -> comp_statement OR comp_expression .)
    PARC            reduce using rule 30 (logic_statement -> comp_statement OR comp_expression .)
    LLAVEC          reduce using rule 30 (logic_statement -> comp_statement OR comp_expression .)


state 41

    (24) comp_statement -> expression . IGUALA factor
    (25) comp_statement -> expression . DIST factor
    (26) comp_statement -> expression . MENOR factor
    (27) comp_statement -> expression . MENORIGUAL factor
    (28) comp_statement -> expression . MAYOR factor
    (29) comp_statement -> expression . MAYORIGUAL factor
    (15) expression -> expression . SUMA term
    (16) expression -> expression . RESTA term

    IGUALA          shift and go to state 22
    DIST            shift and go to state 23
    MENOR           shift and go to state 24
    MENORIGUAL      shift and go to state 25
    MAYOR           shift and go to state 26
    MAYORIGUAL      shift and go to state 27
    SUMA            shift and go to state 28
    RESTA           shift and go to state 29


state 42

    (31) logic_statement -> comp_statement AND comp_expression .

    LLAVEA          reduce using rule 31 (logic_statement -> comp_statement AND comp_expression .)
    ID              reduce using rule 31 (logic_statement -> comp_statement AND comp_expression .)
    PRINT           reduce using rule 31 (logic_statement -> comp_statement AND comp_expression .)
    IF              reduce using rule 31 (logic_statement -> comp_statement AND comp_expression .)
    WHILE           reduce using rule 31 (logic_statement -> comp_statement AND comp_expression .)
    PARA            reduce using rule 31 (logic_statement -> comp_statement AND comp_expression .)
    CTE             reduce using rule 31 (logic_statement -> comp_statement AND comp_expression .)
    $end            reduce using rule 31 (logic_statement -> comp_statement AND comp_expression .)
    PARC            reduce using rule 31 (logic_statement -> comp_statement AND comp_expression .)
    LLAVEC          reduce using rule 31 (logic_statement -> comp_statement AND comp_expression .)


state 43

    (24) comp_statement -> expression IGUALA factor .

    OR              reduce using rule 24 (comp_statement -> expression IGUALA factor .)
    AND             reduce using rule 24 (comp_statement -> expression IGUALA factor .)
    LLAVEA          reduce using rule 24 (comp_statement -> expression IGUALA factor .)
    ID              reduce using rule 24 (comp_statement -> expression IGUALA factor .)
    PRINT           reduce using rule 24 (comp_statement -> expression IGUALA factor .)
    IF              reduce using rule 24 (comp_statement -> expression IGUALA factor .)
    WHILE           reduce using rule 24 (comp_statement -> expression IGUALA factor .)
    PARA            reduce using rule 24 (comp_statement -> expression IGUALA factor .)
    CTE             reduce using rule 24 (comp_statement -> expression IGUALA factor .)
    $end            reduce using rule 24 (comp_statement -> expression IGUALA factor .)
    PARC            reduce using rule 24 (comp_statement -> expression IGUALA factor .)
    LLAVEC          reduce using rule 24 (comp_statement -> expression IGUALA factor .)


state 44

    (25) comp_statement -> expression DIST factor .

    OR              reduce using rule 25 (comp_statement -> expression DIST factor .)
    AND             reduce using rule 25 (comp_statement -> expression DIST factor .)
    LLAVEA          reduce using rule 25 (comp_statement -> expression DIST factor .)
    ID              reduce using rule 25 (comp_statement -> expression DIST factor .)
    PRINT           reduce using rule 25 (comp_statement -> expression DIST factor .)
    IF              reduce using rule 25 (comp_statement -> expression DIST factor .)
    WHILE           reduce using rule 25 (comp_statement -> expression DIST factor .)
    PARA            reduce using rule 25 (comp_statement -> expression DIST factor .)
    CTE             reduce using rule 25 (comp_statement -> expression DIST factor .)
    $end            reduce using rule 25 (comp_statement -> expression DIST factor .)
    PARC            reduce using rule 25 (comp_statement -> expression DIST factor .)
    LLAVEC          reduce using rule 25 (comp_statement -> expression DIST factor .)


state 45

    (26) comp_statement -> expression MENOR factor .

    OR              reduce using rule 26 (comp_statement -> expression MENOR factor .)
    AND             reduce using rule 26 (comp_statement -> expression MENOR factor .)
    LLAVEA          reduce using rule 26 (comp_statement -> expression MENOR factor .)
    ID              reduce using rule 26 (comp_statement -> expression MENOR factor .)
    PRINT           reduce using rule 26 (comp_statement -> expression MENOR factor .)
    IF              reduce using rule 26 (comp_statement -> expression MENOR factor .)
    WHILE           reduce using rule 26 (comp_statement -> expression MENOR factor .)
    PARA            reduce using rule 26 (comp_statement -> expression MENOR factor .)
    CTE             reduce using rule 26 (comp_statement -> expression MENOR factor .)
    $end            reduce using rule 26 (comp_statement -> expression MENOR factor .)
    PARC            reduce using rule 26 (comp_statement -> expression MENOR factor .)
    LLAVEC          reduce using rule 26 (comp_statement -> expression MENOR factor .)


state 46

    (27) comp_statement -> expression MENORIGUAL factor .

    OR              reduce using rule 27 (comp_statement -> expression MENORIGUAL factor .)
    AND             reduce using rule 27 (comp_statement -> expression MENORIGUAL factor .)
    LLAVEA          reduce using rule 27 (comp_statement -> expression MENORIGUAL factor .)
    ID              reduce using rule 27 (comp_statement -> expression MENORIGUAL factor .)
    PRINT           reduce using rule 27 (comp_statement -> expression MENORIGUAL factor .)
    IF              reduce using rule 27 (comp_statement -> expression MENORIGUAL factor .)
    WHILE           reduce using rule 27 (comp_statement -> expression MENORIGUAL factor .)
    PARA            reduce using rule 27 (comp_statement -> expression MENORIGUAL factor .)
    CTE             reduce using rule 27 (comp_statement -> expression MENORIGUAL factor .)
    $end            reduce using rule 27 (comp_statement -> expression MENORIGUAL factor .)
    PARC            reduce using rule 27 (comp_statement -> expression MENORIGUAL factor .)
    LLAVEC          reduce using rule 27 (comp_statement -> expression MENORIGUAL factor .)


state 47

    (28) comp_statement -> expression MAYOR factor .

    OR              reduce using rule 28 (comp_statement -> expression MAYOR factor .)
    AND             reduce using rule 28 (comp_statement -> expression MAYOR factor .)
    LLAVEA          reduce using rule 28 (comp_statement -> expression MAYOR factor .)
    ID              reduce using rule 28 (comp_statement -> expression MAYOR factor .)
    PRINT           reduce using rule 28 (comp_statement -> expression MAYOR factor .)
    IF              reduce using rule 28 (comp_statement -> expression MAYOR factor .)
    WHILE           reduce using rule 28 (comp_statement -> expression MAYOR factor .)
    PARA            reduce using rule 28 (comp_statement -> expression MAYOR factor .)
    CTE             reduce using rule 28 (comp_statement -> expression MAYOR factor .)
    $end            reduce using rule 28 (comp_statement -> expression MAYOR factor .)
    PARC            reduce using rule 28 (comp_statement -> expression MAYOR factor .)
    LLAVEC          reduce using rule 28 (comp_statement -> expression MAYOR factor .)


state 48

    (29) comp_statement -> expression MAYORIGUAL factor .

    OR              reduce using rule 29 (comp_statement -> expression MAYORIGUAL factor .)
    AND             reduce using rule 29 (comp_statement -> expression MAYORIGUAL factor .)
    LLAVEA          reduce using rule 29 (comp_statement -> expression MAYORIGUAL factor .)
    ID              reduce using rule 29 (comp_statement -> expression MAYORIGUAL factor .)
    PRINT           reduce using rule 29 (comp_statement -> expression MAYORIGUAL factor .)
    IF              reduce using rule 29 (comp_statement -> expression MAYORIGUAL factor .)
    WHILE           reduce using rule 29 (comp_statement -> expression MAYORIGUAL factor .)
    PARA            reduce using rule 29 (comp_statement -> expression MAYORIGUAL factor .)
    CTE             reduce using rule 29 (comp_statement -> expression MAYORIGUAL factor .)
    $end            reduce using rule 29 (comp_statement -> expression MAYORIGUAL factor .)
    PARC            reduce using rule 29 (comp_statement -> expression MAYORIGUAL factor .)
    LLAVEC          reduce using rule 29 (comp_statement -> expression MAYORIGUAL factor .)


state 49

    (15) expression -> expression SUMA term .
    (18) term -> term . MULT factor
    (19) term -> term . DIV factor

    IGUALA          reduce using rule 15 (expression -> expression SUMA term .)
    DIST            reduce using rule 15 (expression -> expression SUMA term .)
    MENOR           reduce using rule 15 (expression -> expression SUMA term .)
    MENORIGUAL      reduce using rule 15 (expression -> expression SUMA term .)
    MAYOR           reduce using rule 15 (expression -> expression SUMA term .)
    MAYORIGUAL      reduce using rule 15 (expression -> expression SUMA term .)
    SUMA            reduce using rule 15 (expression -> expression SUMA term .)
    RESTA           reduce using rule 15 (expression -> expression SUMA term .)
    LLAVEA          reduce using rule 15 (expression -> expression SUMA term .)
    ID              reduce using rule 15 (expression -> expression SUMA term .)
    PRINT           reduce using rule 15 (expression -> expression SUMA term .)
    IF              reduce using rule 15 (expression -> expression SUMA term .)
    WHILE           reduce using rule 15 (expression -> expression SUMA term .)
    PARA            reduce using rule 15 (expression -> expression SUMA term .)
    CTE             reduce using rule 15 (expression -> expression SUMA term .)
    $end            reduce using rule 15 (expression -> expression SUMA term .)
    PARC            reduce using rule 15 (expression -> expression SUMA term .)
    LLAVEC          reduce using rule 15 (expression -> expression SUMA term .)
    MULT            shift and go to state 37
    DIV             shift and go to state 38


state 50

    (16) expression -> expression RESTA term .
    (18) term -> term . MULT factor
    (19) term -> term . DIV factor

    IGUALA          reduce using rule 16 (expression -> expression RESTA term .)
    DIST            reduce using rule 16 (expression -> expression RESTA term .)
    MENOR           reduce using rule 16 (expression -> expression RESTA term .)
    MENORIGUAL      reduce using rule 16 (expression -> expression RESTA term .)
    MAYOR           reduce using rule 16 (expression -> expression RESTA term .)
    MAYORIGUAL      reduce using rule 16 (expression -> expression RESTA term .)
    SUMA            reduce using rule 16 (expression -> expression RESTA term .)
    RESTA           reduce using rule 16 (expression -> expression RESTA term .)
    LLAVEA          reduce using rule 16 (expression -> expression RESTA term .)
    ID              reduce using rule 16 (expression -> expression RESTA term .)
    PRINT           reduce using rule 16 (expression -> expression RESTA term .)
    IF              reduce using rule 16 (expression -> expression RESTA term .)
    WHILE           reduce using rule 16 (expression -> expression RESTA term .)
    PARA            reduce using rule 16 (expression -> expression RESTA term .)
    CTE             reduce using rule 16 (expression -> expression RESTA term .)
    $end            reduce using rule 16 (expression -> expression RESTA term .)
    PARC            reduce using rule 16 (expression -> expression RESTA term .)
    LLAVEC          reduce using rule 16 (expression -> expression RESTA term .)
    MULT            shift and go to state 37
    DIV             shift and go to state 38


state 51

    (9) statement -> LLAVEA INT block_decl .

    LLAVEA          reduce using rule 9 (statement -> LLAVEA INT block_decl .)
    ID              reduce using rule 9 (statement -> LLAVEA INT block_decl .)
    PRINT           reduce using rule 9 (statement -> LLAVEA INT block_decl .)
    IF              reduce using rule 9 (statement -> LLAVEA INT block_decl .)
    WHILE           reduce using rule 9 (statement -> LLAVEA INT block_decl .)
    PARA            reduce using rule 9 (statement -> LLAVEA INT block_decl .)
    CTE             reduce using rule 9 (statement -> LLAVEA INT block_decl .)
    $end            reduce using rule 9 (statement -> LLAVEA INT block_decl .)
    LLAVEC          reduce using rule 9 (statement -> LLAVEA INT block_decl .)


state 52

    (10) block_decl -> ID . LLAVEC
    (11) block_decl -> ID . OR other_decl

    LLAVEC          shift and go to state 64
    OR              shift and go to state 65


state 53

    (13) statement -> ID ASIG expression .
    (15) expression -> expression . SUMA term
    (16) expression -> expression . RESTA term

    LLAVEA          reduce using rule 13 (statement -> ID ASIG expression .)
    ID              reduce using rule 13 (statement -> ID ASIG expression .)
    PRINT           reduce using rule 13 (statement -> ID ASIG expression .)
    IF              reduce using rule 13 (statement -> ID ASIG expression .)
    WHILE           reduce using rule 13 (statement -> ID ASIG expression .)
    PARA            reduce using rule 13 (statement -> ID ASIG expression .)
    CTE             reduce using rule 13 (statement -> ID ASIG expression .)
    $end            reduce using rule 13 (statement -> ID ASIG expression .)
    LLAVEC          reduce using rule 13 (statement -> ID ASIG expression .)
    SUMA            shift and go to state 28
    RESTA           shift and go to state 29


state 54

    (23) print_statement -> PRINT PARA expression . PARC
    (15) expression -> expression . SUMA term
    (16) expression -> expression . RESTA term

    PARC            shift and go to state 66
    SUMA            shift and go to state 28
    RESTA           shift and go to state 29


state 55

    (20) factor -> PARA expression PARC .

    MULT            reduce using rule 20 (factor -> PARA expression PARC .)
    DIV             reduce using rule 20 (factor -> PARA expression PARC .)
    IGUALA          reduce using rule 20 (factor -> PARA expression PARC .)
    DIST            reduce using rule 20 (factor -> PARA expression PARC .)
    MENOR           reduce using rule 20 (factor -> PARA expression PARC .)
    MENORIGUAL      reduce using rule 20 (factor -> PARA expression PARC .)
    MAYOR           reduce using rule 20 (factor -> PARA expression PARC .)
    MAYORIGUAL      reduce using rule 20 (factor -> PARA expression PARC .)
    SUMA            reduce using rule 20 (factor -> PARA expression PARC .)
    RESTA           reduce using rule 20 (factor -> PARA expression PARC .)
    LLAVEA          reduce using rule 20 (factor -> PARA expression PARC .)
    ID              reduce using rule 20 (factor -> PARA expression PARC .)
    PRINT           reduce using rule 20 (factor -> PARA expression PARC .)
    IF              reduce using rule 20 (factor -> PARA expression PARC .)
    WHILE           reduce using rule 20 (factor -> PARA expression PARC .)
    PARA            reduce using rule 20 (factor -> PARA expression PARC .)
    CTE             reduce using rule 20 (factor -> PARA expression PARC .)
    $end            reduce using rule 20 (factor -> PARA expression PARC .)
    PARC            reduce using rule 20 (factor -> PARA expression PARC .)
    OR              reduce using rule 20 (factor -> PARA expression PARC .)
    AND             reduce using rule 20 (factor -> PARA expression PARC .)
    LLAVEC          reduce using rule 20 (factor -> PARA expression PARC .)


state 56

    (37) while_statement -> while PARA cond_while . PARC LLAVEA sub_program

    PARC            shift and go to state 67


state 57

    (34) cond_while -> comp_statement .
    (30) logic_statement -> comp_statement . OR comp_expression
    (31) logic_statement -> comp_statement . AND comp_expression

    PARC            reduce using rule 34 (cond_while -> comp_statement .)
    OR              shift and go to state 20
    AND             shift and go to state 21


state 58

    (35) cond_while -> logic_statement .

    PARC            reduce using rule 35 (cond_while -> logic_statement .)


state 59

    (42) if_statement -> IF PARA cond_if . PARC LLAVEA fcpo1 else_statement

    PARC            shift and go to state 68


state 60

    (38) cond_if -> comp_statement .
    (30) logic_statement -> comp_statement . OR comp_expression
    (31) logic_statement -> comp_statement . AND comp_expression

    PARC            reduce using rule 38 (cond_if -> comp_statement .)
    OR              shift and go to state 20
    AND             shift and go to state 21


state 61

    (39) cond_if -> logic_statement .

    PARC            reduce using rule 39 (cond_if -> logic_statement .)


state 62

    (18) term -> term MULT factor .

    MULT            reduce using rule 18 (term -> term MULT factor .)
    DIV             reduce using rule 18 (term -> term MULT factor .)
    IGUALA          reduce using rule 18 (term -> term MULT factor .)
    DIST            reduce using rule 18 (term -> term MULT factor .)
    MENOR           reduce using rule 18 (term -> term MULT factor .)
    MENORIGUAL      reduce using rule 18 (term -> term MULT factor .)
    MAYOR           reduce using rule 18 (term -> term MULT factor .)
    MAYORIGUAL      reduce using rule 18 (term -> term MULT factor .)
    SUMA            reduce using rule 18 (term -> term MULT factor .)
    RESTA           reduce using rule 18 (term -> term MULT factor .)
    LLAVEA          reduce using rule 18 (term -> term MULT factor .)
    ID              reduce using rule 18 (term -> term MULT factor .)
    PRINT           reduce using rule 18 (term -> term MULT factor .)
    IF              reduce using rule 18 (term -> term MULT factor .)
    WHILE           reduce using rule 18 (term -> term MULT factor .)
    PARA            reduce using rule 18 (term -> term MULT factor .)
    CTE             reduce using rule 18 (term -> term MULT factor .)
    $end            reduce using rule 18 (term -> term MULT factor .)
    PARC            reduce using rule 18 (term -> term MULT factor .)
    LLAVEC          reduce using rule 18 (term -> term MULT factor .)


state 63

    (19) term -> term DIV factor .

    MULT            reduce using rule 19 (term -> term DIV factor .)
    DIV             reduce using rule 19 (term -> term DIV factor .)
    IGUALA          reduce using rule 19 (term -> term DIV factor .)
    DIST            reduce using rule 19 (term -> term DIV factor .)
    MENOR           reduce using rule 19 (term -> term DIV factor .)
    MENORIGUAL      reduce using rule 19 (term -> term DIV factor .)
    MAYOR           reduce using rule 19 (term -> term DIV factor .)
    MAYORIGUAL      reduce using rule 19 (term -> term DIV factor .)
    SUMA            reduce using rule 19 (term -> term DIV factor .)
    RESTA           reduce using rule 19 (term -> term DIV factor .)
    LLAVEA          reduce using rule 19 (term -> term DIV factor .)
    ID              reduce using rule 19 (term -> term DIV factor .)
    PRINT           reduce using rule 19 (term -> term DIV factor .)
    IF              reduce using rule 19 (term -> term DIV factor .)
    WHILE           reduce using rule 19 (term -> term DIV factor .)
    PARA            reduce using rule 19 (term -> term DIV factor .)
    CTE             reduce using rule 19 (term -> term DIV factor .)
    $end            reduce using rule 19 (term -> term DIV factor .)
    PARC            reduce using rule 19 (term -> term DIV factor .)
    LLAVEC          reduce using rule 19 (term -> term DIV factor .)


state 64

    (10) block_decl -> ID LLAVEC .

    LLAVEA          reduce using rule 10 (block_decl -> ID LLAVEC .)
    ID              reduce using rule 10 (block_decl -> ID LLAVEC .)
    PRINT           reduce using rule 10 (block_decl -> ID LLAVEC .)
    IF              reduce using rule 10 (block_decl -> ID LLAVEC .)
    WHILE           reduce using rule 10 (block_decl -> ID LLAVEC .)
    PARA            reduce using rule 10 (block_decl -> ID LLAVEC .)
    CTE             reduce using rule 10 (block_decl -> ID LLAVEC .)
    $end            reduce using rule 10 (block_decl -> ID LLAVEC .)
    LLAVEC          reduce using rule 10 (block_decl -> ID LLAVEC .)


state 65

    (11) block_decl -> ID OR . other_decl
    (12) other_decl -> . block_decl
    (10) block_decl -> . ID LLAVEC
    (11) block_decl -> . ID OR other_decl

    ID              shift and go to state 52

    other_decl                     shift and go to state 69
    block_decl                     shift and go to state 70

state 66

    (23) print_statement -> PRINT PARA expression PARC .

    LLAVEA          reduce using rule 23 (print_statement -> PRINT PARA expression PARC .)
    ID              reduce using rule 23 (print_statement -> PRINT PARA expression PARC .)
    PRINT           reduce using rule 23 (print_statement -> PRINT PARA expression PARC .)
    IF              reduce using rule 23 (print_statement -> PRINT PARA expression PARC .)
    WHILE           reduce using rule 23 (print_statement -> PRINT PARA expression PARC .)
    PARA            reduce using rule 23 (print_statement -> PRINT PARA expression PARC .)
    CTE             reduce using rule 23 (print_statement -> PRINT PARA expression PARC .)
    $end            reduce using rule 23 (print_statement -> PRINT PARA expression PARC .)
    LLAVEC          reduce using rule 23 (print_statement -> PRINT PARA expression PARC .)


state 67

    (37) while_statement -> while PARA cond_while PARC . LLAVEA sub_program

    LLAVEA          shift and go to state 71


state 68

    (42) if_statement -> IF PARA cond_if PARC . LLAVEA fcpo1 else_statement

    LLAVEA          shift and go to state 72


state 69

    (11) block_decl -> ID OR other_decl .

    LLAVEA          reduce using rule 11 (block_decl -> ID OR other_decl .)
    ID              reduce using rule 11 (block_decl -> ID OR other_decl .)
    PRINT           reduce using rule 11 (block_decl -> ID OR other_decl .)
    IF              reduce using rule 11 (block_decl -> ID OR other_decl .)
    WHILE           reduce using rule 11 (block_decl -> ID OR other_decl .)
    PARA            reduce using rule 11 (block_decl -> ID OR other_decl .)
    CTE             reduce using rule 11 (block_decl -> ID OR other_decl .)
    $end            reduce using rule 11 (block_decl -> ID OR other_decl .)
    LLAVEC          reduce using rule 11 (block_decl -> ID OR other_decl .)


state 70

    (12) other_decl -> block_decl .

    LLAVEA          reduce using rule 12 (other_decl -> block_decl .)
    ID              reduce using rule 12 (other_decl -> block_decl .)
    PRINT           reduce using rule 12 (other_decl -> block_decl .)
    IF              reduce using rule 12 (other_decl -> block_decl .)
    WHILE           reduce using rule 12 (other_decl -> block_decl .)
    PARA            reduce using rule 12 (other_decl -> block_decl .)
    CTE             reduce using rule 12 (other_decl -> block_decl .)
    $end            reduce using rule 12 (other_decl -> block_decl .)
    LLAVEC          reduce using rule 12 (other_decl -> block_decl .)


state 71

    (37) while_statement -> while PARA cond_while PARC LLAVEA . sub_program
    (33) sub_program -> . program LLAVEC
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . print_statement
    (4) statement -> . comp_statement
    (5) statement -> . logic_statement
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . expression
    (9) statement -> . LLAVEA INT block_decl
    (13) statement -> . ID ASIG expression
    (23) print_statement -> . PRINT PARA expression PARC
    (24) comp_statement -> . expression IGUALA factor
    (25) comp_statement -> . expression DIST factor
    (26) comp_statement -> . expression MENOR factor
    (27) comp_statement -> . expression MENORIGUAL factor
    (28) comp_statement -> . expression MAYOR factor
    (29) comp_statement -> . expression MAYORIGUAL factor
    (30) logic_statement -> . comp_statement OR comp_expression
    (31) logic_statement -> . comp_statement AND comp_expression
    (37) while_statement -> . while PARA cond_while PARC LLAVEA sub_program
    (42) if_statement -> . IF PARA cond_if PARC LLAVEA fcpo1 else_statement
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (36) while -> . WHILE
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    LLAVEA          shift and go to state 9
    ID              shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 15
    WHILE           shift and go to state 17
    PARA            shift and go to state 12
    CTE             shift and go to state 18

    while                          shift and go to state 14
    sub_program                    shift and go to state 73
    program                        shift and go to state 74
    statement                      shift and go to state 2
    print_statement                shift and go to state 3
    comp_statement                 shift and go to state 4
    logic_statement                shift and go to state 5
    while_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    expression                     shift and go to state 8
    factor                         shift and go to state 13
    term                           shift and go to state 16

state 72

    (42) if_statement -> IF PARA cond_if PARC LLAVEA . fcpo1 else_statement
    (40) fcpo1 -> . sub_program
    (33) sub_program -> . program LLAVEC
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . print_statement
    (4) statement -> . comp_statement
    (5) statement -> . logic_statement
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . expression
    (9) statement -> . LLAVEA INT block_decl
    (13) statement -> . ID ASIG expression
    (23) print_statement -> . PRINT PARA expression PARC
    (24) comp_statement -> . expression IGUALA factor
    (25) comp_statement -> . expression DIST factor
    (26) comp_statement -> . expression MENOR factor
    (27) comp_statement -> . expression MENORIGUAL factor
    (28) comp_statement -> . expression MAYOR factor
    (29) comp_statement -> . expression MAYORIGUAL factor
    (30) logic_statement -> . comp_statement OR comp_expression
    (31) logic_statement -> . comp_statement AND comp_expression
    (37) while_statement -> . while PARA cond_while PARC LLAVEA sub_program
    (42) if_statement -> . IF PARA cond_if PARC LLAVEA fcpo1 else_statement
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (36) while -> . WHILE
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    LLAVEA          shift and go to state 9
    ID              shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 15
    WHILE           shift and go to state 17
    PARA            shift and go to state 12
    CTE             shift and go to state 18

    fcpo1                          shift and go to state 75
    sub_program                    shift and go to state 76
    program                        shift and go to state 74
    statement                      shift and go to state 2
    print_statement                shift and go to state 3
    comp_statement                 shift and go to state 4
    logic_statement                shift and go to state 5
    while_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    expression                     shift and go to state 8
    factor                         shift and go to state 13
    while                          shift and go to state 14
    term                           shift and go to state 16

state 73

    (37) while_statement -> while PARA cond_while PARC LLAVEA sub_program .

    LLAVEA          reduce using rule 37 (while_statement -> while PARA cond_while PARC LLAVEA sub_program .)
    ID              reduce using rule 37 (while_statement -> while PARA cond_while PARC LLAVEA sub_program .)
    PRINT           reduce using rule 37 (while_statement -> while PARA cond_while PARC LLAVEA sub_program .)
    IF              reduce using rule 37 (while_statement -> while PARA cond_while PARC LLAVEA sub_program .)
    WHILE           reduce using rule 37 (while_statement -> while PARA cond_while PARC LLAVEA sub_program .)
    PARA            reduce using rule 37 (while_statement -> while PARA cond_while PARC LLAVEA sub_program .)
    CTE             reduce using rule 37 (while_statement -> while PARA cond_while PARC LLAVEA sub_program .)
    $end            reduce using rule 37 (while_statement -> while PARA cond_while PARC LLAVEA sub_program .)
    LLAVEC          reduce using rule 37 (while_statement -> while PARA cond_while PARC LLAVEA sub_program .)


state 74

    (33) sub_program -> program . LLAVEC
    (1) program -> program . statement
    (3) statement -> . print_statement
    (4) statement -> . comp_statement
    (5) statement -> . logic_statement
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . expression
    (9) statement -> . LLAVEA INT block_decl
    (13) statement -> . ID ASIG expression
    (23) print_statement -> . PRINT PARA expression PARC
    (24) comp_statement -> . expression IGUALA factor
    (25) comp_statement -> . expression DIST factor
    (26) comp_statement -> . expression MENOR factor
    (27) comp_statement -> . expression MENORIGUAL factor
    (28) comp_statement -> . expression MAYOR factor
    (29) comp_statement -> . expression MAYORIGUAL factor
    (30) logic_statement -> . comp_statement OR comp_expression
    (31) logic_statement -> . comp_statement AND comp_expression
    (37) while_statement -> . while PARA cond_while PARC LLAVEA sub_program
    (42) if_statement -> . IF PARA cond_if PARC LLAVEA fcpo1 else_statement
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (36) while -> . WHILE
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    LLAVEC          shift and go to state 77
    LLAVEA          shift and go to state 9
    ID              shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 15
    WHILE           shift and go to state 17
    PARA            shift and go to state 12
    CTE             shift and go to state 18

    statement                      shift and go to state 19
    print_statement                shift and go to state 3
    comp_statement                 shift and go to state 4
    logic_statement                shift and go to state 5
    while_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    expression                     shift and go to state 8
    factor                         shift and go to state 13
    while                          shift and go to state 14
    term                           shift and go to state 16

state 75

    (42) if_statement -> IF PARA cond_if PARC LLAVEA fcpo1 . else_statement
    (43) else_statement -> . ELSE LLAVEA fcpo2
    (44) else_statement -> . empty
    (45) empty -> .

    ELSE            shift and go to state 79
    LLAVEA          reduce using rule 45 (empty -> .)
    ID              reduce using rule 45 (empty -> .)
    PRINT           reduce using rule 45 (empty -> .)
    IF              reduce using rule 45 (empty -> .)
    WHILE           reduce using rule 45 (empty -> .)
    PARA            reduce using rule 45 (empty -> .)
    CTE             reduce using rule 45 (empty -> .)
    $end            reduce using rule 45 (empty -> .)
    LLAVEC          reduce using rule 45 (empty -> .)

    else_statement                 shift and go to state 78
    empty                          shift and go to state 80

state 76

    (40) fcpo1 -> sub_program .

    ELSE            reduce using rule 40 (fcpo1 -> sub_program .)
    LLAVEA          reduce using rule 40 (fcpo1 -> sub_program .)
    ID              reduce using rule 40 (fcpo1 -> sub_program .)
    PRINT           reduce using rule 40 (fcpo1 -> sub_program .)
    IF              reduce using rule 40 (fcpo1 -> sub_program .)
    WHILE           reduce using rule 40 (fcpo1 -> sub_program .)
    PARA            reduce using rule 40 (fcpo1 -> sub_program .)
    CTE             reduce using rule 40 (fcpo1 -> sub_program .)
    $end            reduce using rule 40 (fcpo1 -> sub_program .)
    LLAVEC          reduce using rule 40 (fcpo1 -> sub_program .)


state 77

    (33) sub_program -> program LLAVEC .

    LLAVEA          reduce using rule 33 (sub_program -> program LLAVEC .)
    ID              reduce using rule 33 (sub_program -> program LLAVEC .)
    PRINT           reduce using rule 33 (sub_program -> program LLAVEC .)
    IF              reduce using rule 33 (sub_program -> program LLAVEC .)
    WHILE           reduce using rule 33 (sub_program -> program LLAVEC .)
    PARA            reduce using rule 33 (sub_program -> program LLAVEC .)
    CTE             reduce using rule 33 (sub_program -> program LLAVEC .)
    $end            reduce using rule 33 (sub_program -> program LLAVEC .)
    LLAVEC          reduce using rule 33 (sub_program -> program LLAVEC .)
    ELSE            reduce using rule 33 (sub_program -> program LLAVEC .)


state 78

    (42) if_statement -> IF PARA cond_if PARC LLAVEA fcpo1 else_statement .

    LLAVEA          reduce using rule 42 (if_statement -> IF PARA cond_if PARC LLAVEA fcpo1 else_statement .)
    ID              reduce using rule 42 (if_statement -> IF PARA cond_if PARC LLAVEA fcpo1 else_statement .)
    PRINT           reduce using rule 42 (if_statement -> IF PARA cond_if PARC LLAVEA fcpo1 else_statement .)
    IF              reduce using rule 42 (if_statement -> IF PARA cond_if PARC LLAVEA fcpo1 else_statement .)
    WHILE           reduce using rule 42 (if_statement -> IF PARA cond_if PARC LLAVEA fcpo1 else_statement .)
    PARA            reduce using rule 42 (if_statement -> IF PARA cond_if PARC LLAVEA fcpo1 else_statement .)
    CTE             reduce using rule 42 (if_statement -> IF PARA cond_if PARC LLAVEA fcpo1 else_statement .)
    $end            reduce using rule 42 (if_statement -> IF PARA cond_if PARC LLAVEA fcpo1 else_statement .)
    LLAVEC          reduce using rule 42 (if_statement -> IF PARA cond_if PARC LLAVEA fcpo1 else_statement .)


state 79

    (43) else_statement -> ELSE . LLAVEA fcpo2

    LLAVEA          shift and go to state 81


state 80

    (44) else_statement -> empty .

    LLAVEA          reduce using rule 44 (else_statement -> empty .)
    ID              reduce using rule 44 (else_statement -> empty .)
    PRINT           reduce using rule 44 (else_statement -> empty .)
    IF              reduce using rule 44 (else_statement -> empty .)
    WHILE           reduce using rule 44 (else_statement -> empty .)
    PARA            reduce using rule 44 (else_statement -> empty .)
    CTE             reduce using rule 44 (else_statement -> empty .)
    $end            reduce using rule 44 (else_statement -> empty .)
    LLAVEC          reduce using rule 44 (else_statement -> empty .)


state 81

    (43) else_statement -> ELSE LLAVEA . fcpo2
    (41) fcpo2 -> . sub_program
    (33) sub_program -> . program LLAVEC
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . print_statement
    (4) statement -> . comp_statement
    (5) statement -> . logic_statement
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . expression
    (9) statement -> . LLAVEA INT block_decl
    (13) statement -> . ID ASIG expression
    (23) print_statement -> . PRINT PARA expression PARC
    (24) comp_statement -> . expression IGUALA factor
    (25) comp_statement -> . expression DIST factor
    (26) comp_statement -> . expression MENOR factor
    (27) comp_statement -> . expression MENORIGUAL factor
    (28) comp_statement -> . expression MAYOR factor
    (29) comp_statement -> . expression MAYORIGUAL factor
    (30) logic_statement -> . comp_statement OR comp_expression
    (31) logic_statement -> . comp_statement AND comp_expression
    (37) while_statement -> . while PARA cond_while PARC LLAVEA sub_program
    (42) if_statement -> . IF PARA cond_if PARC LLAVEA fcpo1 else_statement
    (14) expression -> . term
    (15) expression -> . expression SUMA term
    (16) expression -> . expression RESTA term
    (36) while -> . WHILE
    (17) term -> . factor
    (18) term -> . term MULT factor
    (19) term -> . term DIV factor
    (20) factor -> . PARA expression PARC
    (21) factor -> . ID
    (22) factor -> . CTE

    LLAVEA          shift and go to state 9
    ID              shift and go to state 10
    PRINT           shift and go to state 11
    IF              shift and go to state 15
    WHILE           shift and go to state 17
    PARA            shift and go to state 12
    CTE             shift and go to state 18

    fcpo2                          shift and go to state 82
    sub_program                    shift and go to state 83
    program                        shift and go to state 74
    statement                      shift and go to state 2
    print_statement                shift and go to state 3
    comp_statement                 shift and go to state 4
    logic_statement                shift and go to state 5
    while_statement                shift and go to state 6
    if_statement                   shift and go to state 7
    expression                     shift and go to state 8
    factor                         shift and go to state 13
    while                          shift and go to state 14
    term                           shift and go to state 16

state 82

    (43) else_statement -> ELSE LLAVEA fcpo2 .

    LLAVEA          reduce using rule 43 (else_statement -> ELSE LLAVEA fcpo2 .)
    ID              reduce using rule 43 (else_statement -> ELSE LLAVEA fcpo2 .)
    PRINT           reduce using rule 43 (else_statement -> ELSE LLAVEA fcpo2 .)
    IF              reduce using rule 43 (else_statement -> ELSE LLAVEA fcpo2 .)
    WHILE           reduce using rule 43 (else_statement -> ELSE LLAVEA fcpo2 .)
    PARA            reduce using rule 43 (else_statement -> ELSE LLAVEA fcpo2 .)
    CTE             reduce using rule 43 (else_statement -> ELSE LLAVEA fcpo2 .)
    $end            reduce using rule 43 (else_statement -> ELSE LLAVEA fcpo2 .)
    LLAVEC          reduce using rule 43 (else_statement -> ELSE LLAVEA fcpo2 .)


state 83

    (41) fcpo2 -> sub_program .

    LLAVEA          reduce using rule 41 (fcpo2 -> sub_program .)
    ID              reduce using rule 41 (fcpo2 -> sub_program .)
    PRINT           reduce using rule 41 (fcpo2 -> sub_program .)
    IF              reduce using rule 41 (fcpo2 -> sub_program .)
    WHILE           reduce using rule 41 (fcpo2 -> sub_program .)
    PARA            reduce using rule 41 (fcpo2 -> sub_program .)
    CTE             reduce using rule 41 (fcpo2 -> sub_program .)
    $end            reduce using rule 41 (fcpo2 -> sub_program .)
    LLAVEC          reduce using rule 41 (fcpo2 -> sub_program .)

