Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     statement -> LLAVEA INT block_decl
Rule 4     block_decl -> ID LLAVEC
Rule 5     block_decl -> ID OR other_decl
Rule 6     other_decl -> block_decl
Rule 7     statement -> ID ASIG expression
Rule 8     expression -> term
Rule 9     expression -> expression SUMA term
Rule 10    expression -> expression RESTA term
Rule 11    term -> factor
Rule 12    term -> term MULT factor
Rule 13    term -> term DIV factor
Rule 14    factor -> PARA expression PARC
Rule 15    factor -> CTE
Rule 16    factor -> ID

Terminals, with rules where they appear

ASIG                 : 7
CTE                  : 15
DIV                  : 13
ID                   : 4 5 7 16
INT                  : 3
LLAVEA               : 3
LLAVEC               : 4
MULT                 : 12
OR                   : 5
PARA                 : 14
PARC                 : 14
RESTA                : 10
SUMA                 : 9
error                : 

Nonterminals, with rules where they appear

block_decl           : 3 6
expression           : 7 9 10 14
factor               : 11 12 13
other_decl           : 5
program              : 1 0
statement            : 1 2
term                 : 8 9 10 12 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . LLAVEA INT block_decl
    (7) statement -> . ID ASIG expression

    LLAVEA          shift and go to state 3
    ID              shift and go to state 4

    program                        shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (3) statement -> . LLAVEA INT block_decl
    (7) statement -> . ID ASIG expression

    LLAVEA          shift and go to state 3
    ID              shift and go to state 4

    statement                      shift and go to state 5

state 2

    (2) program -> statement .

    LLAVEA          reduce using rule 2 (program -> statement .)
    ID              reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)


state 3

    (3) statement -> LLAVEA . INT block_decl

    INT             shift and go to state 6


state 4

    (7) statement -> ID . ASIG expression

    ASIG            shift and go to state 7


state 5

    (1) program -> program statement .

    LLAVEA          reduce using rule 1 (program -> program statement .)
    ID              reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)


state 6

    (3) statement -> LLAVEA INT . block_decl
    (4) block_decl -> . ID LLAVEC
    (5) block_decl -> . ID OR other_decl

    ID              shift and go to state 9

    block_decl                     shift and go to state 8

state 7

    (7) statement -> ID ASIG . expression
    (8) expression -> . term
    (9) expression -> . expression SUMA term
    (10) expression -> . expression RESTA term
    (11) term -> . factor
    (12) term -> . term MULT factor
    (13) term -> . term DIV factor
    (14) factor -> . PARA expression PARC
    (15) factor -> . CTE
    (16) factor -> . ID

    PARA            shift and go to state 14
    CTE             shift and go to state 15
    ID              shift and go to state 10

    expression                     shift and go to state 11
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 8

    (3) statement -> LLAVEA INT block_decl .

    LLAVEA          reduce using rule 3 (statement -> LLAVEA INT block_decl .)
    ID              reduce using rule 3 (statement -> LLAVEA INT block_decl .)
    $end            reduce using rule 3 (statement -> LLAVEA INT block_decl .)


state 9

    (4) block_decl -> ID . LLAVEC
    (5) block_decl -> ID . OR other_decl

    LLAVEC          shift and go to state 16
    OR              shift and go to state 17


state 10

    (16) factor -> ID .

    MULT            reduce using rule 16 (factor -> ID .)
    DIV             reduce using rule 16 (factor -> ID .)
    SUMA            reduce using rule 16 (factor -> ID .)
    RESTA           reduce using rule 16 (factor -> ID .)
    LLAVEA          reduce using rule 16 (factor -> ID .)
    ID              reduce using rule 16 (factor -> ID .)
    $end            reduce using rule 16 (factor -> ID .)
    PARC            reduce using rule 16 (factor -> ID .)


state 11

    (7) statement -> ID ASIG expression .
    (9) expression -> expression . SUMA term
    (10) expression -> expression . RESTA term

    LLAVEA          reduce using rule 7 (statement -> ID ASIG expression .)
    ID              reduce using rule 7 (statement -> ID ASIG expression .)
    $end            reduce using rule 7 (statement -> ID ASIG expression .)
    SUMA            shift and go to state 18
    RESTA           shift and go to state 19


state 12

    (8) expression -> term .
    (12) term -> term . MULT factor
    (13) term -> term . DIV factor

    SUMA            reduce using rule 8 (expression -> term .)
    RESTA           reduce using rule 8 (expression -> term .)
    LLAVEA          reduce using rule 8 (expression -> term .)
    ID              reduce using rule 8 (expression -> term .)
    $end            reduce using rule 8 (expression -> term .)
    PARC            reduce using rule 8 (expression -> term .)
    MULT            shift and go to state 20
    DIV             shift and go to state 21


state 13

    (11) term -> factor .

    MULT            reduce using rule 11 (term -> factor .)
    DIV             reduce using rule 11 (term -> factor .)
    SUMA            reduce using rule 11 (term -> factor .)
    RESTA           reduce using rule 11 (term -> factor .)
    LLAVEA          reduce using rule 11 (term -> factor .)
    ID              reduce using rule 11 (term -> factor .)
    $end            reduce using rule 11 (term -> factor .)
    PARC            reduce using rule 11 (term -> factor .)


state 14

    (14) factor -> PARA . expression PARC
    (8) expression -> . term
    (9) expression -> . expression SUMA term
    (10) expression -> . expression RESTA term
    (11) term -> . factor
    (12) term -> . term MULT factor
    (13) term -> . term DIV factor
    (14) factor -> . PARA expression PARC
    (15) factor -> . CTE
    (16) factor -> . ID

    PARA            shift and go to state 14
    CTE             shift and go to state 15
    ID              shift and go to state 10

    expression                     shift and go to state 22
    term                           shift and go to state 12
    factor                         shift and go to state 13

state 15

    (15) factor -> CTE .

    MULT            reduce using rule 15 (factor -> CTE .)
    DIV             reduce using rule 15 (factor -> CTE .)
    SUMA            reduce using rule 15 (factor -> CTE .)
    RESTA           reduce using rule 15 (factor -> CTE .)
    LLAVEA          reduce using rule 15 (factor -> CTE .)
    ID              reduce using rule 15 (factor -> CTE .)
    $end            reduce using rule 15 (factor -> CTE .)
    PARC            reduce using rule 15 (factor -> CTE .)


state 16

    (4) block_decl -> ID LLAVEC .

    LLAVEA          reduce using rule 4 (block_decl -> ID LLAVEC .)
    ID              reduce using rule 4 (block_decl -> ID LLAVEC .)
    $end            reduce using rule 4 (block_decl -> ID LLAVEC .)


state 17

    (5) block_decl -> ID OR . other_decl
    (6) other_decl -> . block_decl
    (4) block_decl -> . ID LLAVEC
    (5) block_decl -> . ID OR other_decl

    ID              shift and go to state 9

    other_decl                     shift and go to state 23
    block_decl                     shift and go to state 24

state 18

    (9) expression -> expression SUMA . term
    (11) term -> . factor
    (12) term -> . term MULT factor
    (13) term -> . term DIV factor
    (14) factor -> . PARA expression PARC
    (15) factor -> . CTE
    (16) factor -> . ID

    PARA            shift and go to state 14
    CTE             shift and go to state 15
    ID              shift and go to state 10

    term                           shift and go to state 25
    factor                         shift and go to state 13

state 19

    (10) expression -> expression RESTA . term
    (11) term -> . factor
    (12) term -> . term MULT factor
    (13) term -> . term DIV factor
    (14) factor -> . PARA expression PARC
    (15) factor -> . CTE
    (16) factor -> . ID

    PARA            shift and go to state 14
    CTE             shift and go to state 15
    ID              shift and go to state 10

    term                           shift and go to state 26
    factor                         shift and go to state 13

state 20

    (12) term -> term MULT . factor
    (14) factor -> . PARA expression PARC
    (15) factor -> . CTE
    (16) factor -> . ID

    PARA            shift and go to state 14
    CTE             shift and go to state 15
    ID              shift and go to state 10

    factor                         shift and go to state 27

state 21

    (13) term -> term DIV . factor
    (14) factor -> . PARA expression PARC
    (15) factor -> . CTE
    (16) factor -> . ID

    PARA            shift and go to state 14
    CTE             shift and go to state 15
    ID              shift and go to state 10

    factor                         shift and go to state 28

state 22

    (14) factor -> PARA expression . PARC
    (9) expression -> expression . SUMA term
    (10) expression -> expression . RESTA term

    PARC            shift and go to state 29
    SUMA            shift and go to state 18
    RESTA           shift and go to state 19


state 23

    (5) block_decl -> ID OR other_decl .

    LLAVEA          reduce using rule 5 (block_decl -> ID OR other_decl .)
    ID              reduce using rule 5 (block_decl -> ID OR other_decl .)
    $end            reduce using rule 5 (block_decl -> ID OR other_decl .)


state 24

    (6) other_decl -> block_decl .

    LLAVEA          reduce using rule 6 (other_decl -> block_decl .)
    ID              reduce using rule 6 (other_decl -> block_decl .)
    $end            reduce using rule 6 (other_decl -> block_decl .)


state 25

    (9) expression -> expression SUMA term .
    (12) term -> term . MULT factor
    (13) term -> term . DIV factor

    SUMA            reduce using rule 9 (expression -> expression SUMA term .)
    RESTA           reduce using rule 9 (expression -> expression SUMA term .)
    LLAVEA          reduce using rule 9 (expression -> expression SUMA term .)
    ID              reduce using rule 9 (expression -> expression SUMA term .)
    $end            reduce using rule 9 (expression -> expression SUMA term .)
    PARC            reduce using rule 9 (expression -> expression SUMA term .)
    MULT            shift and go to state 20
    DIV             shift and go to state 21


state 26

    (10) expression -> expression RESTA term .
    (12) term -> term . MULT factor
    (13) term -> term . DIV factor

    SUMA            reduce using rule 10 (expression -> expression RESTA term .)
    RESTA           reduce using rule 10 (expression -> expression RESTA term .)
    LLAVEA          reduce using rule 10 (expression -> expression RESTA term .)
    ID              reduce using rule 10 (expression -> expression RESTA term .)
    $end            reduce using rule 10 (expression -> expression RESTA term .)
    PARC            reduce using rule 10 (expression -> expression RESTA term .)
    MULT            shift and go to state 20
    DIV             shift and go to state 21


state 27

    (12) term -> term MULT factor .

    MULT            reduce using rule 12 (term -> term MULT factor .)
    DIV             reduce using rule 12 (term -> term MULT factor .)
    SUMA            reduce using rule 12 (term -> term MULT factor .)
    RESTA           reduce using rule 12 (term -> term MULT factor .)
    LLAVEA          reduce using rule 12 (term -> term MULT factor .)
    ID              reduce using rule 12 (term -> term MULT factor .)
    $end            reduce using rule 12 (term -> term MULT factor .)
    PARC            reduce using rule 12 (term -> term MULT factor .)


state 28

    (13) term -> term DIV factor .

    MULT            reduce using rule 13 (term -> term DIV factor .)
    DIV             reduce using rule 13 (term -> term DIV factor .)
    SUMA            reduce using rule 13 (term -> term DIV factor .)
    RESTA           reduce using rule 13 (term -> term DIV factor .)
    LLAVEA          reduce using rule 13 (term -> term DIV factor .)
    ID              reduce using rule 13 (term -> term DIV factor .)
    $end            reduce using rule 13 (term -> term DIV factor .)
    PARC            reduce using rule 13 (term -> term DIV factor .)


state 29

    (14) factor -> PARA expression PARC .

    MULT            reduce using rule 14 (factor -> PARA expression PARC .)
    DIV             reduce using rule 14 (factor -> PARA expression PARC .)
    SUMA            reduce using rule 14 (factor -> PARA expression PARC .)
    RESTA           reduce using rule 14 (factor -> PARA expression PARC .)
    LLAVEA          reduce using rule 14 (factor -> PARA expression PARC .)
    ID              reduce using rule 14 (factor -> PARA expression PARC .)
    $end            reduce using rule 14 (factor -> PARA expression PARC .)
    PARC            reduce using rule 14 (factor -> PARA expression PARC .)

