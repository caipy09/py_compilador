Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     statement -> expression
Rule 4     statement -> ID ASIG expression
Rule 5     expression -> expression SUMA term
Rule 6     expression -> expression RESTA term
Rule 7     expression -> term
Rule 8     expression -> RESTA expression
Rule 9     expression -> SUMA expression
Rule 10    term -> term MULT factor
Rule 11    term -> term DIV factor
Rule 12    term -> factor
Rule 13    factor -> CTE
Rule 14    factor -> ID
Rule 15    factor -> PARA expression PARC

Terminals, with rules where they appear

ASIG                 : 4
CTE                  : 13
DIV                  : 11
ID                   : 4 14
MULT                 : 10
PARA                 : 15
PARC                 : 15
RESTA                : 6 8
SUMA                 : 5 9
error                : 

Nonterminals, with rules where they appear

expression           : 3 4 5 6 8 9 15
factor               : 10 11 12
program              : 1 0
statement            : 1 2
term                 : 5 6 7 10 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (3) statement -> . expression
    (4) statement -> . ID ASIG expression
    (5) expression -> . expression SUMA term
    (6) expression -> . expression RESTA term
    (7) expression -> . term
    (8) expression -> . RESTA expression
    (9) expression -> . SUMA expression
    (10) term -> . term MULT factor
    (11) term -> . term DIV factor
    (12) term -> . factor
    (13) factor -> . CTE
    (14) factor -> . ID
    (15) factor -> . PARA expression PARC

    ID              shift and go to state 4
    RESTA           shift and go to state 7
    SUMA            shift and go to state 5
    CTE             shift and go to state 9
    PARA            shift and go to state 10

    program                        shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    term                           shift and go to state 6
    factor                         shift and go to state 8

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (3) statement -> . expression
    (4) statement -> . ID ASIG expression
    (5) expression -> . expression SUMA term
    (6) expression -> . expression RESTA term
    (7) expression -> . term
    (8) expression -> . RESTA expression
    (9) expression -> . SUMA expression
    (10) term -> . term MULT factor
    (11) term -> . term DIV factor
    (12) term -> . factor
    (13) factor -> . CTE
    (14) factor -> . ID
    (15) factor -> . PARA expression PARC

    ID              shift and go to state 4
    RESTA           shift and go to state 7
    SUMA            shift and go to state 5
    CTE             shift and go to state 9
    PARA            shift and go to state 10

    statement                      shift and go to state 11
    expression                     shift and go to state 3
    term                           shift and go to state 6
    factor                         shift and go to state 8

state 2

    (2) program -> statement .

    ID              reduce using rule 2 (program -> statement .)
    RESTA           reduce using rule 2 (program -> statement .)
    SUMA            reduce using rule 2 (program -> statement .)
    CTE             reduce using rule 2 (program -> statement .)
    PARA            reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)


state 3

    (3) statement -> expression .
    (5) expression -> expression . SUMA term
    (6) expression -> expression . RESTA term

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
    ID              reduce using rule 3 (statement -> expression .)
    CTE             reduce using rule 3 (statement -> expression .)
    PARA            reduce using rule 3 (statement -> expression .)
    $end            reduce using rule 3 (statement -> expression .)
    SUMA            shift and go to state 12
    RESTA           shift and go to state 13

  ! RESTA           [ reduce using rule 3 (statement -> expression .) ]
  ! SUMA            [ reduce using rule 3 (statement -> expression .) ]


state 4

    (4) statement -> ID . ASIG expression
    (14) factor -> ID .

    ASIG            shift and go to state 14
    MULT            reduce using rule 14 (factor -> ID .)
    DIV             reduce using rule 14 (factor -> ID .)
    SUMA            reduce using rule 14 (factor -> ID .)
    RESTA           reduce using rule 14 (factor -> ID .)
    ID              reduce using rule 14 (factor -> ID .)
    CTE             reduce using rule 14 (factor -> ID .)
    PARA            reduce using rule 14 (factor -> ID .)
    $end            reduce using rule 14 (factor -> ID .)


state 5

    (9) expression -> SUMA . expression
    (5) expression -> . expression SUMA term
    (6) expression -> . expression RESTA term
    (7) expression -> . term
    (8) expression -> . RESTA expression
    (9) expression -> . SUMA expression
    (10) term -> . term MULT factor
    (11) term -> . term DIV factor
    (12) term -> . factor
    (13) factor -> . CTE
    (14) factor -> . ID
    (15) factor -> . PARA expression PARC

    RESTA           shift and go to state 7
    SUMA            shift and go to state 5
    CTE             shift and go to state 9
    ID              shift and go to state 16
    PARA            shift and go to state 10

    expression                     shift and go to state 15
    term                           shift and go to state 6
    factor                         shift and go to state 8

state 6

    (7) expression -> term .
    (10) term -> term . MULT factor
    (11) term -> term . DIV factor

    SUMA            reduce using rule 7 (expression -> term .)
    RESTA           reduce using rule 7 (expression -> term .)
    ID              reduce using rule 7 (expression -> term .)
    CTE             reduce using rule 7 (expression -> term .)
    PARA            reduce using rule 7 (expression -> term .)
    $end            reduce using rule 7 (expression -> term .)
    PARC            reduce using rule 7 (expression -> term .)
    MULT            shift and go to state 17
    DIV             shift and go to state 18


state 7

    (8) expression -> RESTA . expression
    (5) expression -> . expression SUMA term
    (6) expression -> . expression RESTA term
    (7) expression -> . term
    (8) expression -> . RESTA expression
    (9) expression -> . SUMA expression
    (10) term -> . term MULT factor
    (11) term -> . term DIV factor
    (12) term -> . factor
    (13) factor -> . CTE
    (14) factor -> . ID
    (15) factor -> . PARA expression PARC

    RESTA           shift and go to state 7
    SUMA            shift and go to state 5
    CTE             shift and go to state 9
    ID              shift and go to state 16
    PARA            shift and go to state 10

    expression                     shift and go to state 19
    term                           shift and go to state 6
    factor                         shift and go to state 8

state 8

    (12) term -> factor .

    MULT            reduce using rule 12 (term -> factor .)
    DIV             reduce using rule 12 (term -> factor .)
    SUMA            reduce using rule 12 (term -> factor .)
    RESTA           reduce using rule 12 (term -> factor .)
    ID              reduce using rule 12 (term -> factor .)
    CTE             reduce using rule 12 (term -> factor .)
    PARA            reduce using rule 12 (term -> factor .)
    $end            reduce using rule 12 (term -> factor .)
    PARC            reduce using rule 12 (term -> factor .)


state 9

    (13) factor -> CTE .

    MULT            reduce using rule 13 (factor -> CTE .)
    DIV             reduce using rule 13 (factor -> CTE .)
    SUMA            reduce using rule 13 (factor -> CTE .)
    RESTA           reduce using rule 13 (factor -> CTE .)
    ID              reduce using rule 13 (factor -> CTE .)
    CTE             reduce using rule 13 (factor -> CTE .)
    PARA            reduce using rule 13 (factor -> CTE .)
    $end            reduce using rule 13 (factor -> CTE .)
    PARC            reduce using rule 13 (factor -> CTE .)


state 10

    (15) factor -> PARA . expression PARC
    (5) expression -> . expression SUMA term
    (6) expression -> . expression RESTA term
    (7) expression -> . term
    (8) expression -> . RESTA expression
    (9) expression -> . SUMA expression
    (10) term -> . term MULT factor
    (11) term -> . term DIV factor
    (12) term -> . factor
    (13) factor -> . CTE
    (14) factor -> . ID
    (15) factor -> . PARA expression PARC

    RESTA           shift and go to state 7
    SUMA            shift and go to state 5
    CTE             shift and go to state 9
    ID              shift and go to state 16
    PARA            shift and go to state 10

    expression                     shift and go to state 20
    term                           shift and go to state 6
    factor                         shift and go to state 8

state 11

    (1) program -> program statement .

    ID              reduce using rule 1 (program -> program statement .)
    RESTA           reduce using rule 1 (program -> program statement .)
    SUMA            reduce using rule 1 (program -> program statement .)
    CTE             reduce using rule 1 (program -> program statement .)
    PARA            reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)


state 12

    (5) expression -> expression SUMA . term
    (10) term -> . term MULT factor
    (11) term -> . term DIV factor
    (12) term -> . factor
    (13) factor -> . CTE
    (14) factor -> . ID
    (15) factor -> . PARA expression PARC

    CTE             shift and go to state 9
    ID              shift and go to state 16
    PARA            shift and go to state 10

    term                           shift and go to state 21
    factor                         shift and go to state 8

state 13

    (6) expression -> expression RESTA . term
    (10) term -> . term MULT factor
    (11) term -> . term DIV factor
    (12) term -> . factor
    (13) factor -> . CTE
    (14) factor -> . ID
    (15) factor -> . PARA expression PARC

    CTE             shift and go to state 9
    ID              shift and go to state 16
    PARA            shift and go to state 10

    term                           shift and go to state 22
    factor                         shift and go to state 8

state 14

    (4) statement -> ID ASIG . expression
    (5) expression -> . expression SUMA term
    (6) expression -> . expression RESTA term
    (7) expression -> . term
    (8) expression -> . RESTA expression
    (9) expression -> . SUMA expression
    (10) term -> . term MULT factor
    (11) term -> . term DIV factor
    (12) term -> . factor
    (13) factor -> . CTE
    (14) factor -> . ID
    (15) factor -> . PARA expression PARC

    RESTA           shift and go to state 7
    SUMA            shift and go to state 5
    CTE             shift and go to state 9
    ID              shift and go to state 16
    PARA            shift and go to state 10

    expression                     shift and go to state 23
    term                           shift and go to state 6
    factor                         shift and go to state 8

state 15

    (9) expression -> SUMA expression .
    (5) expression -> expression . SUMA term
    (6) expression -> expression . RESTA term

    SUMA            reduce using rule 9 (expression -> SUMA expression .)
    RESTA           reduce using rule 9 (expression -> SUMA expression .)
    ID              reduce using rule 9 (expression -> SUMA expression .)
    CTE             reduce using rule 9 (expression -> SUMA expression .)
    PARA            reduce using rule 9 (expression -> SUMA expression .)
    $end            reduce using rule 9 (expression -> SUMA expression .)
    PARC            reduce using rule 9 (expression -> SUMA expression .)

  ! SUMA            [ shift and go to state 12 ]
  ! RESTA           [ shift and go to state 13 ]


state 16

    (14) factor -> ID .

    MULT            reduce using rule 14 (factor -> ID .)
    DIV             reduce using rule 14 (factor -> ID .)
    SUMA            reduce using rule 14 (factor -> ID .)
    RESTA           reduce using rule 14 (factor -> ID .)
    ID              reduce using rule 14 (factor -> ID .)
    CTE             reduce using rule 14 (factor -> ID .)
    PARA            reduce using rule 14 (factor -> ID .)
    $end            reduce using rule 14 (factor -> ID .)
    PARC            reduce using rule 14 (factor -> ID .)


state 17

    (10) term -> term MULT . factor
    (13) factor -> . CTE
    (14) factor -> . ID
    (15) factor -> . PARA expression PARC

    CTE             shift and go to state 9
    ID              shift and go to state 16
    PARA            shift and go to state 10

    factor                         shift and go to state 24

state 18

    (11) term -> term DIV . factor
    (13) factor -> . CTE
    (14) factor -> . ID
    (15) factor -> . PARA expression PARC

    CTE             shift and go to state 9
    ID              shift and go to state 16
    PARA            shift and go to state 10

    factor                         shift and go to state 25

state 19

    (8) expression -> RESTA expression .
    (5) expression -> expression . SUMA term
    (6) expression -> expression . RESTA term

    SUMA            reduce using rule 8 (expression -> RESTA expression .)
    RESTA           reduce using rule 8 (expression -> RESTA expression .)
    ID              reduce using rule 8 (expression -> RESTA expression .)
    CTE             reduce using rule 8 (expression -> RESTA expression .)
    PARA            reduce using rule 8 (expression -> RESTA expression .)
    $end            reduce using rule 8 (expression -> RESTA expression .)
    PARC            reduce using rule 8 (expression -> RESTA expression .)

  ! SUMA            [ shift and go to state 12 ]
  ! RESTA           [ shift and go to state 13 ]


state 20

    (15) factor -> PARA expression . PARC
    (5) expression -> expression . SUMA term
    (6) expression -> expression . RESTA term

    PARC            shift and go to state 26
    SUMA            shift and go to state 12
    RESTA           shift and go to state 13


state 21

    (5) expression -> expression SUMA term .
    (10) term -> term . MULT factor
    (11) term -> term . DIV factor

    SUMA            reduce using rule 5 (expression -> expression SUMA term .)
    RESTA           reduce using rule 5 (expression -> expression SUMA term .)
    ID              reduce using rule 5 (expression -> expression SUMA term .)
    CTE             reduce using rule 5 (expression -> expression SUMA term .)
    PARA            reduce using rule 5 (expression -> expression SUMA term .)
    $end            reduce using rule 5 (expression -> expression SUMA term .)
    PARC            reduce using rule 5 (expression -> expression SUMA term .)
    MULT            shift and go to state 17
    DIV             shift and go to state 18


state 22

    (6) expression -> expression RESTA term .
    (10) term -> term . MULT factor
    (11) term -> term . DIV factor

    SUMA            reduce using rule 6 (expression -> expression RESTA term .)
    RESTA           reduce using rule 6 (expression -> expression RESTA term .)
    ID              reduce using rule 6 (expression -> expression RESTA term .)
    CTE             reduce using rule 6 (expression -> expression RESTA term .)
    PARA            reduce using rule 6 (expression -> expression RESTA term .)
    $end            reduce using rule 6 (expression -> expression RESTA term .)
    PARC            reduce using rule 6 (expression -> expression RESTA term .)
    MULT            shift and go to state 17
    DIV             shift and go to state 18


state 23

    (4) statement -> ID ASIG expression .
    (5) expression -> expression . SUMA term
    (6) expression -> expression . RESTA term

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
    ID              reduce using rule 4 (statement -> ID ASIG expression .)
    CTE             reduce using rule 4 (statement -> ID ASIG expression .)
    PARA            reduce using rule 4 (statement -> ID ASIG expression .)
    $end            reduce using rule 4 (statement -> ID ASIG expression .)
    SUMA            shift and go to state 12
    RESTA           shift and go to state 13

  ! RESTA           [ reduce using rule 4 (statement -> ID ASIG expression .) ]
  ! SUMA            [ reduce using rule 4 (statement -> ID ASIG expression .) ]


state 24

    (10) term -> term MULT factor .

    MULT            reduce using rule 10 (term -> term MULT factor .)
    DIV             reduce using rule 10 (term -> term MULT factor .)
    SUMA            reduce using rule 10 (term -> term MULT factor .)
    RESTA           reduce using rule 10 (term -> term MULT factor .)
    ID              reduce using rule 10 (term -> term MULT factor .)
    CTE             reduce using rule 10 (term -> term MULT factor .)
    PARA            reduce using rule 10 (term -> term MULT factor .)
    $end            reduce using rule 10 (term -> term MULT factor .)
    PARC            reduce using rule 10 (term -> term MULT factor .)


state 25

    (11) term -> term DIV factor .

    MULT            reduce using rule 11 (term -> term DIV factor .)
    DIV             reduce using rule 11 (term -> term DIV factor .)
    SUMA            reduce using rule 11 (term -> term DIV factor .)
    RESTA           reduce using rule 11 (term -> term DIV factor .)
    ID              reduce using rule 11 (term -> term DIV factor .)
    CTE             reduce using rule 11 (term -> term DIV factor .)
    PARA            reduce using rule 11 (term -> term DIV factor .)
    $end            reduce using rule 11 (term -> term DIV factor .)
    PARC            reduce using rule 11 (term -> term DIV factor .)


state 26

    (15) factor -> PARA expression PARC .

    MULT            reduce using rule 15 (factor -> PARA expression PARC .)
    DIV             reduce using rule 15 (factor -> PARA expression PARC .)
    SUMA            reduce using rule 15 (factor -> PARA expression PARC .)
    RESTA           reduce using rule 15 (factor -> PARA expression PARC .)
    ID              reduce using rule 15 (factor -> PARA expression PARC .)
    CTE             reduce using rule 15 (factor -> PARA expression PARC .)
    PARA            reduce using rule 15 (factor -> PARA expression PARC .)
    $end            reduce using rule 15 (factor -> PARA expression PARC .)
    PARC            reduce using rule 15 (factor -> PARA expression PARC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUMA in state 3 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 3 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 23 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 23 resolved as shift
